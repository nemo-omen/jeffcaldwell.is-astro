---
// const { tree } = Astro.props;

const tree = [
  {
    name: '/',
    type: 'dir',
    children: [
      {name: '_ChildComponent.astro'},
      {name: '_ParentComponent.astro'}
    ]
  }
];

function mapRecursive <T>(
    oldArray: Array<T & { children?: T[] }>, 
    callback: (item: T) =>T, 
    newArray: T[] = []
  ): T[] {
    if(oldArray.length <= 0) {
      return newArray;
    } else {
      let [item, ...theRest] = oldArray;

      if(item.children) {
        item = {...item, children: mapRecursive<T>(item.children, callback)};
      }
      const interimArray: T[] = [...newArray, callback(item)];
      return mapRecursive<T>(theRest, callback, interimArray);
    }
}
---

<details>
  {mapRecursive(tree, (el) => (
    <summary>{el.name}</summary>
    <ul>
    {el.children && mapRecursive(el.children, (child) => (
      <li>{child.name}</li>
    ))}
    </ul>
  ))}
</details>
