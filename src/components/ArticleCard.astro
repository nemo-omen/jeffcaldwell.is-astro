---
import { Image, Picture } from '@astrojs/image/components';
const { data, headingLevel, url } = Astro.props;

const { title, date, summary, image } = data;

const feature = await import(/* @vite-ignore */`../assets/images/${image!.src}.webp`);
const { width, height } = feature.default;

---
<a href={url} aria-labelledby={'#' + url}>
  <article class="card">
  <Picture 
      src={feature.default}
      alt={image!.alt}
      class="feature"
      widths={[600, 800]}
      aspectRatio={16 / 9}
      sizes="(max-width: 400px) 600px, (max-width: 600px) 600px, (max-width: 900px) 800px, (min-width: 901px) 800px"
      fit="cover"
      position="top"
      width={width}
      height={height}
      loading="lazy"
      />
      <div class="overlay"></div>
      <div class="overlay-2"></div>
      <div class="content">
        {headingLevel === 2 && <h2 class="heading" id={url}>{title}</h2>}
        {headingLevel === 3 && <h3 class="heading" id={url}>{title}</h3>}
        {headingLevel === 4 && <h4 class="heading" id={url}>{title}</h4>}
      
        <p>{summary}</p>
      </div>

  </article>
</a>

<style>

a:focus {
  outline-thickness: 0.7ex; 
  /* outline-offset: 0; */
  outline-color: var(--primary);
}
.card {
  position: relative;
  isolation: isolate;
  background: var(--bg-darker);
  box-shadow: 0.5em 0.5em 1em 2px var(--bg-alpha);
  height: 23rem;
}

img {
  position: absolute;
  height: 100%;
  top: 0;
  object-fit: cover;
  filter: brightness(100%) contrast(100%);
  transition: filter 0.2s ease-in-out;
}

a:hover img,
a:focus img {
  filter: brightness(50%) contrast(110%);
}

.overlay,
.overlay-2 {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  transition: opacity 0.2s ease-in-out;
}

.overlay {
  opacity: 1;
  background:
    linear-gradient(
      to bottom,
      var(--bg),
      var(--bg-alpha),
      transparent
    );
}

.overlay-2 {
  opacity: 0;
  background:
    linear-gradient(
      to top,
      var(--bg),
      var(--bg-alpha),
      transparent
    );
}

a:hover .overlay-2,
a:focus .overlay-2 {
  opacity: 1;
}

.content{
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  padding: var(--size-0);
  overflow: hidden;
  display: grid;
  grid-template-rows: auto 1fr auto;
  grid-gap: var(--size--2);
  align-items: start;
}

.content p {
  transform: translateY(100%);
  opacity: 0;
  transition: 
    transform 0.2s ease-in-out,
    opacity 0.2s ease-in-out;
  overflow-wrap: break-word; 
}

a:hover .content p,
a:focus .content p{
  transform: translate(0);
  opacity: 1;
}

:is(h2, h3, h4) {
  font-size: var(--size-2);
  text-shadow: 2px 2px 2px var(--bg-alpha);
}

.content p {
  font-size: var(--size-0);
  line-height: 1.5;
}

</style>
